/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module tilesort_2 (
    input clk,
    input rst,
    input up,
    input down,
    input left,
    input right,
    input rotate_left,
    input rotate_right,
    output reg tile1_out,
    output reg tile2_out,
    output reg tile3_out,
    output reg tile4_out,
    output reg tile5_out,
    output reg tile6_out,
    output reg tile7_out,
    output reg tile8_out,
    output reg tile9_out,
    output reg tile10_out,
    output reg tile11_out,
    output reg tile12_out,
    output reg tile13_out,
    output reg tile14_out,
    output reg tile15_out,
    output reg tile16_out,
    output reg tile17_out,
    output reg tile18_out,
    output reg tile19_out,
    output reg tile20_out,
    output reg tile21_out,
    output reg tile22_out,
    output reg tile23_out,
    output reg tile24_out,
    output reg tile25_out,
    output reg debug1,
    output reg debug_play,
    output reg debug_winlevel,
    output reg debug_wingame,
    output reg led4,
    output reg led5,
    output reg selector_out
  );
  
  
  
  wire [1-1:0] M_selector_bitout;
  reg [10-1:0] M_selector_horizontaloffset;
  reg [9-1:0] M_selector_verticaloffset;
  selector_draw_3 selector (
    .clk(clk),
    .horizontaloffset(M_selector_horizontaloffset),
    .verticaloffset(M_selector_verticaloffset),
    .bitout(M_selector_bitout)
  );
  wire [1-1:0] M_counter_inc_state;
  stateCounter_4 counter (
    .clk(clk),
    .inc_state(M_counter_inc_state)
  );
  wire [1-1:0] M_shape0_a_bitout;
  reg [10-1:0] M_shape0_a_horizontaloffset;
  reg [9-1:0] M_shape0_a_verticaloffset;
  reg [3-1:0] M_shape0_a_orientation;
  shape0draw_5 shape0_a (
    .clk(clk),
    .horizontaloffset(M_shape0_a_horizontaloffset),
    .verticaloffset(M_shape0_a_verticaloffset),
    .orientation(M_shape0_a_orientation),
    .bitout(M_shape0_a_bitout)
  );
  wire [1-1:0] M_shape0_b_bitout;
  reg [10-1:0] M_shape0_b_horizontaloffset;
  reg [9-1:0] M_shape0_b_verticaloffset;
  reg [3-1:0] M_shape0_b_orientation;
  shape0draw_5 shape0_b (
    .clk(clk),
    .horizontaloffset(M_shape0_b_horizontaloffset),
    .verticaloffset(M_shape0_b_verticaloffset),
    .orientation(M_shape0_b_orientation),
    .bitout(M_shape0_b_bitout)
  );
  wire [1-1:0] M_shape0_c_bitout;
  reg [10-1:0] M_shape0_c_horizontaloffset;
  reg [9-1:0] M_shape0_c_verticaloffset;
  reg [3-1:0] M_shape0_c_orientation;
  shape0draw_5 shape0_c (
    .clk(clk),
    .horizontaloffset(M_shape0_c_horizontaloffset),
    .verticaloffset(M_shape0_c_verticaloffset),
    .orientation(M_shape0_c_orientation),
    .bitout(M_shape0_c_bitout)
  );
  wire [1-1:0] M_shape0_d_bitout;
  reg [10-1:0] M_shape0_d_horizontaloffset;
  reg [9-1:0] M_shape0_d_verticaloffset;
  reg [3-1:0] M_shape0_d_orientation;
  shape0draw_5 shape0_d (
    .clk(clk),
    .horizontaloffset(M_shape0_d_horizontaloffset),
    .verticaloffset(M_shape0_d_verticaloffset),
    .orientation(M_shape0_d_orientation),
    .bitout(M_shape0_d_bitout)
  );
  wire [1-1:0] M_shape0_e_bitout;
  reg [10-1:0] M_shape0_e_horizontaloffset;
  reg [9-1:0] M_shape0_e_verticaloffset;
  reg [3-1:0] M_shape0_e_orientation;
  shape0draw_5 shape0_e (
    .clk(clk),
    .horizontaloffset(M_shape0_e_horizontaloffset),
    .verticaloffset(M_shape0_e_verticaloffset),
    .orientation(M_shape0_e_orientation),
    .bitout(M_shape0_e_bitout)
  );
  wire [1-1:0] M_shape1_a_bitout;
  reg [10-1:0] M_shape1_a_horizontaloffset;
  reg [9-1:0] M_shape1_a_verticaloffset;
  reg [3-1:0] M_shape1_a_orientation;
  shape1draw_10 shape1_a (
    .clk(clk),
    .horizontaloffset(M_shape1_a_horizontaloffset),
    .verticaloffset(M_shape1_a_verticaloffset),
    .orientation(M_shape1_a_orientation),
    .bitout(M_shape1_a_bitout)
  );
  wire [1-1:0] M_shape1_b_bitout;
  reg [10-1:0] M_shape1_b_horizontaloffset;
  reg [9-1:0] M_shape1_b_verticaloffset;
  reg [3-1:0] M_shape1_b_orientation;
  shape1draw_10 shape1_b (
    .clk(clk),
    .horizontaloffset(M_shape1_b_horizontaloffset),
    .verticaloffset(M_shape1_b_verticaloffset),
    .orientation(M_shape1_b_orientation),
    .bitout(M_shape1_b_bitout)
  );
  wire [1-1:0] M_shape1_c_bitout;
  reg [10-1:0] M_shape1_c_horizontaloffset;
  reg [9-1:0] M_shape1_c_verticaloffset;
  reg [3-1:0] M_shape1_c_orientation;
  shape1draw_10 shape1_c (
    .clk(clk),
    .horizontaloffset(M_shape1_c_horizontaloffset),
    .verticaloffset(M_shape1_c_verticaloffset),
    .orientation(M_shape1_c_orientation),
    .bitout(M_shape1_c_bitout)
  );
  wire [1-1:0] M_shape1_d_bitout;
  reg [10-1:0] M_shape1_d_horizontaloffset;
  reg [9-1:0] M_shape1_d_verticaloffset;
  reg [3-1:0] M_shape1_d_orientation;
  shape1draw_10 shape1_d (
    .clk(clk),
    .horizontaloffset(M_shape1_d_horizontaloffset),
    .verticaloffset(M_shape1_d_verticaloffset),
    .orientation(M_shape1_d_orientation),
    .bitout(M_shape1_d_bitout)
  );
  wire [1-1:0] M_shape1_e_bitout;
  reg [10-1:0] M_shape1_e_horizontaloffset;
  reg [9-1:0] M_shape1_e_verticaloffset;
  reg [3-1:0] M_shape1_e_orientation;
  shape1draw_10 shape1_e (
    .clk(clk),
    .horizontaloffset(M_shape1_e_horizontaloffset),
    .verticaloffset(M_shape1_e_verticaloffset),
    .orientation(M_shape1_e_orientation),
    .bitout(M_shape1_e_bitout)
  );
  wire [1-1:0] M_shape1_f_bitout;
  reg [10-1:0] M_shape1_f_horizontaloffset;
  reg [9-1:0] M_shape1_f_verticaloffset;
  reg [3-1:0] M_shape1_f_orientation;
  shape1draw_10 shape1_f (
    .clk(clk),
    .horizontaloffset(M_shape1_f_horizontaloffset),
    .verticaloffset(M_shape1_f_verticaloffset),
    .orientation(M_shape1_f_orientation),
    .bitout(M_shape1_f_bitout)
  );
  wire [1-1:0] M_shape1_g_bitout;
  reg [10-1:0] M_shape1_g_horizontaloffset;
  reg [9-1:0] M_shape1_g_verticaloffset;
  reg [3-1:0] M_shape1_g_orientation;
  shape1draw_10 shape1_g (
    .clk(clk),
    .horizontaloffset(M_shape1_g_horizontaloffset),
    .verticaloffset(M_shape1_g_verticaloffset),
    .orientation(M_shape1_g_orientation),
    .bitout(M_shape1_g_bitout)
  );
  wire [1-1:0] M_shape2_a_bitout;
  reg [10-1:0] M_shape2_a_horizontaloffset;
  reg [9-1:0] M_shape2_a_verticaloffset;
  reg [3-1:0] M_shape2_a_orientation;
  shape2draw_17 shape2_a (
    .clk(clk),
    .horizontaloffset(M_shape2_a_horizontaloffset),
    .verticaloffset(M_shape2_a_verticaloffset),
    .orientation(M_shape2_a_orientation),
    .bitout(M_shape2_a_bitout)
  );
  wire [1-1:0] M_shape2_b_bitout;
  reg [10-1:0] M_shape2_b_horizontaloffset;
  reg [9-1:0] M_shape2_b_verticaloffset;
  reg [3-1:0] M_shape2_b_orientation;
  shape2draw_17 shape2_b (
    .clk(clk),
    .horizontaloffset(M_shape2_b_horizontaloffset),
    .verticaloffset(M_shape2_b_verticaloffset),
    .orientation(M_shape2_b_orientation),
    .bitout(M_shape2_b_bitout)
  );
  wire [1-1:0] M_shape2_c_bitout;
  reg [10-1:0] M_shape2_c_horizontaloffset;
  reg [9-1:0] M_shape2_c_verticaloffset;
  reg [3-1:0] M_shape2_c_orientation;
  shape2draw_17 shape2_c (
    .clk(clk),
    .horizontaloffset(M_shape2_c_horizontaloffset),
    .verticaloffset(M_shape2_c_verticaloffset),
    .orientation(M_shape2_c_orientation),
    .bitout(M_shape2_c_bitout)
  );
  wire [1-1:0] M_shape2_d_bitout;
  reg [10-1:0] M_shape2_d_horizontaloffset;
  reg [9-1:0] M_shape2_d_verticaloffset;
  reg [3-1:0] M_shape2_d_orientation;
  shape2draw_17 shape2_d (
    .clk(clk),
    .horizontaloffset(M_shape2_d_horizontaloffset),
    .verticaloffset(M_shape2_d_verticaloffset),
    .orientation(M_shape2_d_orientation),
    .bitout(M_shape2_d_bitout)
  );
  wire [1-1:0] M_shape2_e_bitout;
  reg [10-1:0] M_shape2_e_horizontaloffset;
  reg [9-1:0] M_shape2_e_verticaloffset;
  reg [3-1:0] M_shape2_e_orientation;
  shape2draw_17 shape2_e (
    .clk(clk),
    .horizontaloffset(M_shape2_e_horizontaloffset),
    .verticaloffset(M_shape2_e_verticaloffset),
    .orientation(M_shape2_e_orientation),
    .bitout(M_shape2_e_bitout)
  );
  wire [1-1:0] M_shape3_a_bitout;
  reg [10-1:0] M_shape3_a_horizontaloffset;
  reg [9-1:0] M_shape3_a_verticaloffset;
  reg [3-1:0] M_shape3_a_orientation;
  shape3draw_22 shape3_a (
    .clk(clk),
    .horizontaloffset(M_shape3_a_horizontaloffset),
    .verticaloffset(M_shape3_a_verticaloffset),
    .orientation(M_shape3_a_orientation),
    .bitout(M_shape3_a_bitout)
  );
  wire [1-1:0] M_shape3_b_bitout;
  reg [10-1:0] M_shape3_b_horizontaloffset;
  reg [9-1:0] M_shape3_b_verticaloffset;
  reg [3-1:0] M_shape3_b_orientation;
  shape3draw_22 shape3_b (
    .clk(clk),
    .horizontaloffset(M_shape3_b_horizontaloffset),
    .verticaloffset(M_shape3_b_verticaloffset),
    .orientation(M_shape3_b_orientation),
    .bitout(M_shape3_b_bitout)
  );
  wire [1-1:0] M_shape3_c_bitout;
  reg [10-1:0] M_shape3_c_horizontaloffset;
  reg [9-1:0] M_shape3_c_verticaloffset;
  reg [3-1:0] M_shape3_c_orientation;
  shape3draw_22 shape3_c (
    .clk(clk),
    .horizontaloffset(M_shape3_c_horizontaloffset),
    .verticaloffset(M_shape3_c_verticaloffset),
    .orientation(M_shape3_c_orientation),
    .bitout(M_shape3_c_bitout)
  );
  wire [1-1:0] M_shape3_d_bitout;
  reg [10-1:0] M_shape3_d_horizontaloffset;
  reg [9-1:0] M_shape3_d_verticaloffset;
  reg [3-1:0] M_shape3_d_orientation;
  shape3draw_22 shape3_d (
    .clk(clk),
    .horizontaloffset(M_shape3_d_horizontaloffset),
    .verticaloffset(M_shape3_d_verticaloffset),
    .orientation(M_shape3_d_orientation),
    .bitout(M_shape3_d_bitout)
  );
  wire [1-1:0] M_shape3_e_bitout;
  reg [10-1:0] M_shape3_e_horizontaloffset;
  reg [9-1:0] M_shape3_e_verticaloffset;
  reg [3-1:0] M_shape3_e_orientation;
  shape3draw_22 shape3_e (
    .clk(clk),
    .horizontaloffset(M_shape3_e_horizontaloffset),
    .verticaloffset(M_shape3_e_verticaloffset),
    .orientation(M_shape3_e_orientation),
    .bitout(M_shape3_e_bitout)
  );
  wire [1-1:0] M_shape3_f_bitout;
  reg [10-1:0] M_shape3_f_horizontaloffset;
  reg [9-1:0] M_shape3_f_verticaloffset;
  reg [3-1:0] M_shape3_f_orientation;
  shape3draw_22 shape3_f (
    .clk(clk),
    .horizontaloffset(M_shape3_f_horizontaloffset),
    .verticaloffset(M_shape3_f_verticaloffset),
    .orientation(M_shape3_f_orientation),
    .bitout(M_shape3_f_bitout)
  );
  wire [1-1:0] M_shape4_a_bitout;
  reg [10-1:0] M_shape4_a_horizontaloffset;
  reg [9-1:0] M_shape4_a_verticaloffset;
  reg [3-1:0] M_shape4_a_orientation;
  shape4draw_28 shape4_a (
    .clk(clk),
    .horizontaloffset(M_shape4_a_horizontaloffset),
    .verticaloffset(M_shape4_a_verticaloffset),
    .orientation(M_shape4_a_orientation),
    .bitout(M_shape4_a_bitout)
  );
  wire [1-1:0] M_shape4_b_bitout;
  reg [10-1:0] M_shape4_b_horizontaloffset;
  reg [9-1:0] M_shape4_b_verticaloffset;
  reg [3-1:0] M_shape4_b_orientation;
  shape4draw_28 shape4_b (
    .clk(clk),
    .horizontaloffset(M_shape4_b_horizontaloffset),
    .verticaloffset(M_shape4_b_verticaloffset),
    .orientation(M_shape4_b_orientation),
    .bitout(M_shape4_b_bitout)
  );
  wire [1-1:0] M_shape4_c_bitout;
  reg [10-1:0] M_shape4_c_horizontaloffset;
  reg [9-1:0] M_shape4_c_verticaloffset;
  reg [3-1:0] M_shape4_c_orientation;
  shape4draw_28 shape4_c (
    .clk(clk),
    .horizontaloffset(M_shape4_c_horizontaloffset),
    .verticaloffset(M_shape4_c_verticaloffset),
    .orientation(M_shape4_c_orientation),
    .bitout(M_shape4_c_bitout)
  );
  wire [1-1:0] M_shape4_d_bitout;
  reg [10-1:0] M_shape4_d_horizontaloffset;
  reg [9-1:0] M_shape4_d_verticaloffset;
  reg [3-1:0] M_shape4_d_orientation;
  shape4draw_28 shape4_d (
    .clk(clk),
    .horizontaloffset(M_shape4_d_horizontaloffset),
    .verticaloffset(M_shape4_d_verticaloffset),
    .orientation(M_shape4_d_orientation),
    .bitout(M_shape4_d_bitout)
  );
  wire [1-1:0] M_shape4_e_bitout;
  reg [10-1:0] M_shape4_e_horizontaloffset;
  reg [9-1:0] M_shape4_e_verticaloffset;
  reg [3-1:0] M_shape4_e_orientation;
  shape4draw_28 shape4_e (
    .clk(clk),
    .horizontaloffset(M_shape4_e_horizontaloffset),
    .verticaloffset(M_shape4_e_verticaloffset),
    .orientation(M_shape4_e_orientation),
    .bitout(M_shape4_e_bitout)
  );
  wire [1-1:0] M_shape5_a_bitout;
  reg [10-1:0] M_shape5_a_horizontaloffset;
  reg [9-1:0] M_shape5_a_verticaloffset;
  reg [3-1:0] M_shape5_a_orientation;
  shape5draw_33 shape5_a (
    .clk(clk),
    .horizontaloffset(M_shape5_a_horizontaloffset),
    .verticaloffset(M_shape5_a_verticaloffset),
    .orientation(M_shape5_a_orientation),
    .bitout(M_shape5_a_bitout)
  );
  wire [1-1:0] M_shape5_b_bitout;
  reg [10-1:0] M_shape5_b_horizontaloffset;
  reg [9-1:0] M_shape5_b_verticaloffset;
  reg [3-1:0] M_shape5_b_orientation;
  shape5draw_33 shape5_b (
    .clk(clk),
    .horizontaloffset(M_shape5_b_horizontaloffset),
    .verticaloffset(M_shape5_b_verticaloffset),
    .orientation(M_shape5_b_orientation),
    .bitout(M_shape5_b_bitout)
  );
  wire [1-1:0] M_shape5_c_bitout;
  reg [10-1:0] M_shape5_c_horizontaloffset;
  reg [9-1:0] M_shape5_c_verticaloffset;
  reg [3-1:0] M_shape5_c_orientation;
  shape5draw_33 shape5_c (
    .clk(clk),
    .horizontaloffset(M_shape5_c_horizontaloffset),
    .verticaloffset(M_shape5_c_verticaloffset),
    .orientation(M_shape5_c_orientation),
    .bitout(M_shape5_c_bitout)
  );
  localparam S1_selected_tile = 5'd0;
  localparam S2_selected_tile = 5'd1;
  localparam S3_selected_tile = 5'd2;
  localparam S4_selected_tile = 5'd3;
  localparam S5_selected_tile = 5'd4;
  localparam S6_selected_tile = 5'd5;
  localparam S7_selected_tile = 5'd6;
  localparam S8_selected_tile = 5'd7;
  localparam S9_selected_tile = 5'd8;
  localparam S10_selected_tile = 5'd9;
  localparam S11_selected_tile = 5'd10;
  localparam S12_selected_tile = 5'd11;
  localparam S13_selected_tile = 5'd12;
  localparam S14_selected_tile = 5'd13;
  localparam S15_selected_tile = 5'd14;
  localparam S16_selected_tile = 5'd15;
  localparam S17_selected_tile = 5'd16;
  localparam S18_selected_tile = 5'd17;
  localparam S19_selected_tile = 5'd18;
  localparam S20_selected_tile = 5'd19;
  localparam S21_selected_tile = 5'd20;
  localparam S22_selected_tile = 5'd21;
  localparam S23_selected_tile = 5'd22;
  localparam S24_selected_tile = 5'd23;
  localparam S25_selected_tile = 5'd24;
  
  reg [4:0] M_selected_tile_d, M_selected_tile_q = S1_selected_tile;
  reg [2:0] M_tile1_orientation_d, M_tile1_orientation_q = 1'h0;
  reg [2:0] M_tile2_orientation_d, M_tile2_orientation_q = 1'h0;
  reg [2:0] M_tile3_orientation_d, M_tile3_orientation_q = 1'h0;
  reg [2:0] M_tile4_orientation_d, M_tile4_orientation_q = 1'h0;
  reg [2:0] M_tile5_orientation_d, M_tile5_orientation_q = 1'h0;
  reg [2:0] M_tile6_orientation_d, M_tile6_orientation_q = 1'h0;
  reg [2:0] M_tile7_orientation_d, M_tile7_orientation_q = 1'h0;
  reg [2:0] M_tile8_orientation_d, M_tile8_orientation_q = 1'h0;
  reg [2:0] M_tile9_orientation_d, M_tile9_orientation_q = 1'h0;
  reg [2:0] M_tile10_orientation_d, M_tile10_orientation_q = 1'h0;
  reg [2:0] M_tile11_orientation_d, M_tile11_orientation_q = 1'h0;
  reg [2:0] M_tile12_orientation_d, M_tile12_orientation_q = 1'h0;
  reg [2:0] M_tile13_orientation_d, M_tile13_orientation_q = 1'h0;
  reg [2:0] M_tile14_orientation_d, M_tile14_orientation_q = 1'h0;
  reg [2:0] M_tile15_orientation_d, M_tile15_orientation_q = 1'h0;
  reg [2:0] M_tile16_orientation_d, M_tile16_orientation_q = 1'h0;
  reg [2:0] M_tile17_orientation_d, M_tile17_orientation_q = 1'h0;
  reg [2:0] M_tile18_orientation_d, M_tile18_orientation_q = 1'h0;
  reg [2:0] M_tile19_orientation_d, M_tile19_orientation_q = 1'h0;
  reg [2:0] M_tile20_orientation_d, M_tile20_orientation_q = 1'h0;
  reg [2:0] M_tile21_orientation_d, M_tile21_orientation_q = 1'h0;
  reg [2:0] M_tile22_orientation_d, M_tile22_orientation_q = 1'h0;
  reg [2:0] M_tile23_orientation_d, M_tile23_orientation_q = 1'h0;
  reg [2:0] M_tile24_orientation_d, M_tile24_orientation_q = 1'h0;
  reg [2:0] M_tile25_orientation_d, M_tile25_orientation_q = 1'h0;
  localparam GAME_PLAYING_game_stage = 2'd0;
  localparam WIN_THE_LEVEL_game_stage = 2'd1;
  localparam WIN_THE_GAME_game_stage = 2'd2;
  
  reg [1:0] M_game_stage_d, M_game_stage_q = GAME_PLAYING_game_stage;
  reg [1:0] M_number_of_wins_d, M_number_of_wins_q = 1'h0;
  
  wire [1-1:0] M_alu_z;
  wire [1-1:0] M_alu_v;
  wire [1-1:0] M_alu_n;
  wire [8-1:0] M_alu_outalu;
  reg [8-1:0] M_alu_a;
  reg [8-1:0] M_alu_b;
  reg [6-1:0] M_alu_alufn;
  alu_36 alu (
    .a(M_alu_a),
    .b(M_alu_b),
    .alufn(M_alu_alufn),
    .z(M_alu_z),
    .v(M_alu_v),
    .n(M_alu_n),
    .outalu(M_alu_outalu)
  );
  
  reg is_correct_solution;
  
  wire [10-1:0] M_rng_num;
  reg [1-1:0] M_rng_next;
  reg [32-1:0] M_rng_seed;
  rngesus_37 rng (
    .clk(clk),
    .rst(rst),
    .next(M_rng_next),
    .seed(M_rng_seed),
    .num(M_rng_num)
  );
  
  always @* begin
    M_game_stage_d = M_game_stage_q;
    M_selected_tile_d = M_selected_tile_q;
    M_number_of_wins_d = M_number_of_wins_q;
    M_tile21_orientation_d = M_tile21_orientation_q;
    M_tile24_orientation_d = M_tile24_orientation_q;
    M_tile9_orientation_d = M_tile9_orientation_q;
    M_tile4_orientation_d = M_tile4_orientation_q;
    M_tile15_orientation_d = M_tile15_orientation_q;
    M_tile11_orientation_d = M_tile11_orientation_q;
    M_tile12_orientation_d = M_tile12_orientation_q;
    M_tile5_orientation_d = M_tile5_orientation_q;
    M_tile17_orientation_d = M_tile17_orientation_q;
    M_tile3_orientation_d = M_tile3_orientation_q;
    M_tile10_orientation_d = M_tile10_orientation_q;
    M_tile7_orientation_d = M_tile7_orientation_q;
    M_tile16_orientation_d = M_tile16_orientation_q;
    M_tile2_orientation_d = M_tile2_orientation_q;
    M_tile23_orientation_d = M_tile23_orientation_q;
    M_tile6_orientation_d = M_tile6_orientation_q;
    M_tile8_orientation_d = M_tile8_orientation_q;
    M_tile14_orientation_d = M_tile14_orientation_q;
    M_tile18_orientation_d = M_tile18_orientation_q;
    M_tile20_orientation_d = M_tile20_orientation_q;
    M_tile25_orientation_d = M_tile25_orientation_q;
    M_tile22_orientation_d = M_tile22_orientation_q;
    M_tile1_orientation_d = M_tile1_orientation_q;
    M_tile19_orientation_d = M_tile19_orientation_q;
    M_tile13_orientation_d = M_tile13_orientation_q;
    
    M_alu_alufn = 6'h00;
    M_alu_a = 8'h00;
    M_alu_b = 8'h00;
    debug_play = 1'h0;
    debug_winlevel = 1'h0;
    debug_wingame = 1'h0;
    M_selector_horizontaloffset = 1'h0;
    M_selector_verticaloffset = 1'h0;
    is_correct_solution = 1'h0;
    selector_out = M_selector_bitout & !is_correct_solution;
    M_rng_seed = 11'h4d2;
    M_rng_next = 1'h1;
    M_tile1_orientation_d = M_rng_num[0+2-:3] - 1'h1;
    M_tile2_orientation_d = M_rng_num[3+2-:3] - 1'h1;
    M_tile3_orientation_d = M_rng_num[2+2-:3] - 1'h1;
    M_tile4_orientation_d = M_rng_num[0+2-:3] - 1'h1;
    M_tile5_orientation_d = M_rng_num[1+2-:3] - 1'h1;
    M_tile6_orientation_d = M_rng_num[7+2-:3] - 1'h1;
    M_tile7_orientation_d = M_rng_num[4+2-:3] - 1'h1;
    M_tile8_orientation_d = M_rng_num[3+2-:3] - 1'h1;
    M_tile9_orientation_d = M_rng_num[0+2-:3] - 1'h1;
    M_tile10_orientation_d = M_rng_num[2+2-:3] - 1'h1;
    M_tile11_orientation_d = M_rng_num[7+2-:3] - 1'h1;
    M_tile12_orientation_d = M_rng_num[5+2-:3] - 1'h1;
    M_tile13_orientation_d = M_rng_num[3+2-:3] - 1'h1;
    M_tile14_orientation_d = M_rng_num[0+2-:3] - 1'h1;
    M_tile15_orientation_d = M_rng_num[1+2-:3] - 1'h1;
    M_tile16_orientation_d = M_rng_num[5+2-:3] - 1'h1;
    M_tile17_orientation_d = M_rng_num[4+2-:3] - 1'h1;
    M_tile18_orientation_d = M_rng_num[1+2-:3] - 1'h1;
    M_tile19_orientation_d = M_rng_num[1+2-:3] - 1'h1;
    M_tile20_orientation_d = M_rng_num[0+2-:3] - 1'h1;
    M_tile21_orientation_d = M_rng_num[2+2-:3] - 1'h1;
    M_tile22_orientation_d = M_rng_num[7+2-:3] - 1'h1;
    M_tile23_orientation_d = M_rng_num[3+2-:3] - 1'h1;
    M_tile24_orientation_d = M_rng_num[5+2-:3] - 1'h1;
    M_tile25_orientation_d = M_rng_num[4+2-:3] - 1'h1;
    if (M_tile1_orientation_q > 3'h6) begin
      M_tile1_orientation_d = 1'h1;
    end else begin
      if (M_tile1_orientation_q < 1'h1) begin
        M_tile1_orientation_d = 3'h6;
      end else begin
        M_tile1_orientation_d = M_tile1_orientation_q;
      end
    end
    if (M_tile2_orientation_q > 3'h6) begin
      M_tile2_orientation_d = 1'h1;
    end else begin
      if (M_tile2_orientation_q < 1'h1) begin
        M_tile2_orientation_d = 3'h6;
      end else begin
        M_tile2_orientation_d = M_tile2_orientation_q;
      end
    end
    if (M_tile3_orientation_q > 3'h6) begin
      M_tile3_orientation_d = 1'h1;
    end else begin
      if (M_tile3_orientation_q < 1'h1) begin
        M_tile3_orientation_d = 3'h6;
      end else begin
        M_tile3_orientation_d = M_tile3_orientation_q;
      end
    end
    if (M_tile4_orientation_q > 3'h6) begin
      M_tile4_orientation_d = 1'h1;
    end else begin
      if (M_tile4_orientation_q < 1'h1) begin
        M_tile4_orientation_d = 3'h6;
      end else begin
        M_tile4_orientation_d = M_tile4_orientation_q;
      end
    end
    if (M_tile5_orientation_q > 3'h6) begin
      M_tile5_orientation_d = 1'h1;
    end else begin
      if (M_tile5_orientation_q < 1'h1) begin
        M_tile5_orientation_d = 3'h6;
      end else begin
        M_tile5_orientation_d = M_tile5_orientation_q;
      end
    end
    if (M_tile6_orientation_q > 3'h6) begin
      M_tile6_orientation_d = 1'h1;
    end else begin
      if (M_tile6_orientation_q < 1'h1) begin
        M_tile6_orientation_d = 3'h6;
      end else begin
        M_tile6_orientation_d = M_tile6_orientation_q;
      end
    end
    if (M_tile7_orientation_q > 3'h6) begin
      M_tile7_orientation_d = 1'h1;
    end else begin
      if (M_tile7_orientation_q < 1'h1) begin
        M_tile7_orientation_d = 3'h6;
      end else begin
        M_tile7_orientation_d = M_tile7_orientation_q;
      end
    end
    if (M_tile8_orientation_q > 3'h6) begin
      M_tile8_orientation_d = 1'h1;
    end else begin
      if (M_tile8_orientation_q < 1'h1) begin
        M_tile8_orientation_d = 3'h6;
      end else begin
        M_tile8_orientation_d = M_tile8_orientation_q;
      end
    end
    if (M_tile9_orientation_q > 3'h6) begin
      M_tile9_orientation_d = 1'h1;
    end else begin
      if (M_tile9_orientation_q < 1'h1) begin
        M_tile9_orientation_d = 3'h6;
      end else begin
        M_tile9_orientation_d = M_tile9_orientation_q;
      end
    end
    if (M_tile10_orientation_q > 3'h6) begin
      M_tile10_orientation_d = 1'h1;
    end else begin
      if (M_tile10_orientation_q < 1'h1) begin
        M_tile10_orientation_d = 3'h6;
      end else begin
        M_tile10_orientation_d = M_tile10_orientation_q;
      end
    end
    if (M_tile11_orientation_q > 3'h6) begin
      M_tile11_orientation_d = 1'h1;
    end else begin
      if (M_tile11_orientation_q < 1'h1) begin
        M_tile11_orientation_d = 3'h6;
      end else begin
        M_tile11_orientation_d = M_tile11_orientation_q;
      end
    end
    if (M_tile12_orientation_q > 3'h6) begin
      M_tile12_orientation_d = 1'h1;
    end else begin
      if (M_tile12_orientation_q < 1'h1) begin
        M_tile12_orientation_d = 3'h6;
      end else begin
        M_tile12_orientation_d = M_tile12_orientation_q;
      end
    end
    if (M_tile13_orientation_q > 3'h6) begin
      M_tile13_orientation_d = 1'h1;
    end else begin
      if (M_tile13_orientation_q < 1'h1) begin
        M_tile13_orientation_d = 3'h6;
      end else begin
        M_tile13_orientation_d = M_tile13_orientation_q;
      end
    end
    if (M_tile14_orientation_q > 3'h6) begin
      M_tile14_orientation_d = 1'h1;
    end else begin
      if (M_tile14_orientation_q < 1'h1) begin
        M_tile14_orientation_d = 3'h6;
      end else begin
        M_tile14_orientation_d = M_tile14_orientation_q;
      end
    end
    if (M_tile15_orientation_q > 3'h6) begin
      M_tile15_orientation_d = 1'h1;
    end else begin
      if (M_tile15_orientation_q < 1'h1) begin
        M_tile15_orientation_d = 3'h6;
      end else begin
        M_tile15_orientation_d = M_tile15_orientation_q;
      end
    end
    if (M_tile16_orientation_q > 3'h6) begin
      M_tile16_orientation_d = 1'h1;
    end else begin
      if (M_tile16_orientation_q < 1'h1) begin
        M_tile16_orientation_d = 3'h6;
      end else begin
        M_tile16_orientation_d = M_tile16_orientation_q;
      end
    end
    if (M_tile17_orientation_q > 3'h6) begin
      M_tile17_orientation_d = 1'h1;
    end else begin
      if (M_tile17_orientation_q < 1'h1) begin
        M_tile17_orientation_d = 3'h6;
      end else begin
        M_tile17_orientation_d = M_tile17_orientation_q;
      end
    end
    if (M_tile18_orientation_q > 3'h6) begin
      M_tile18_orientation_d = 1'h1;
    end else begin
      if (M_tile18_orientation_q < 1'h1) begin
        M_tile18_orientation_d = 3'h6;
      end else begin
        M_tile18_orientation_d = M_tile18_orientation_q;
      end
    end
    if (M_tile19_orientation_q > 3'h6) begin
      M_tile19_orientation_d = 1'h1;
    end else begin
      if (M_tile19_orientation_q < 1'h1) begin
        M_tile19_orientation_d = 3'h6;
      end else begin
        M_tile19_orientation_d = M_tile19_orientation_q;
      end
    end
    if (M_tile20_orientation_q > 3'h6) begin
      M_tile20_orientation_d = 1'h1;
    end else begin
      if (M_tile20_orientation_q < 1'h1) begin
        M_tile20_orientation_d = 3'h6;
      end else begin
        M_tile20_orientation_d = M_tile20_orientation_q;
      end
    end
    if (M_tile21_orientation_q > 3'h6) begin
      M_tile21_orientation_d = 1'h1;
    end else begin
      if (M_tile21_orientation_q < 1'h1) begin
        M_tile21_orientation_d = 3'h6;
      end else begin
        M_tile21_orientation_d = M_tile21_orientation_q;
      end
    end
    if (M_tile22_orientation_q > 3'h6) begin
      M_tile22_orientation_d = 1'h1;
    end else begin
      if (M_tile22_orientation_q < 1'h1) begin
        M_tile22_orientation_d = 3'h6;
      end else begin
        M_tile22_orientation_d = M_tile22_orientation_q;
      end
    end
    if (M_tile23_orientation_q > 3'h6) begin
      M_tile23_orientation_d = 1'h1;
    end else begin
      if (M_tile23_orientation_q < 1'h1) begin
        M_tile23_orientation_d = 3'h6;
      end else begin
        M_tile23_orientation_d = M_tile23_orientation_q;
      end
    end
    if (M_tile24_orientation_q > 3'h6) begin
      M_tile24_orientation_d = 1'h1;
    end else begin
      if (M_tile24_orientation_q < 1'h1) begin
        M_tile24_orientation_d = 3'h6;
      end else begin
        M_tile24_orientation_d = M_tile24_orientation_q;
      end
    end
    if (M_tile25_orientation_q > 3'h6) begin
      M_tile25_orientation_d = 1'h1;
    end else begin
      if (M_tile25_orientation_q < 1'h1) begin
        M_tile25_orientation_d = 3'h6;
      end else begin
        M_tile25_orientation_d = M_tile25_orientation_q;
      end
    end
    led4 = 1'h0;
    led5 = 1'h0;
    debug1 = 1'h0;
    if ((M_number_of_wins_q == 1'h0) && (M_tile1_orientation_q == 3'h4 && (M_tile2_orientation_q == 1'h1 | M_tile2_orientation_q == 3'h4) && M_tile3_orientation_q == 3'h6 && M_tile4_orientation_q == 3'h4 && M_tile5_orientation_q == 3'h5 && M_tile6_orientation_q == 3'h6 && M_tile7_orientation_q == 2'h3 && M_tile8_orientation_q == 3'h4 && M_tile9_orientation_q == 3'h6 && M_tile10_orientation_q == 3'h6 && M_tile11_orientation_q == 3'h4 && M_tile12_orientation_q == 3'h5 && (M_tile13_orientation_q == 2'h2 | M_tile13_orientation_q == 3'h5) && (M_tile14_orientation_q == 2'h3 | M_tile14_orientation_q == 3'h6) && M_tile15_orientation_q == 2'h2 && M_tile16_orientation_q == 3'h6 && M_tile17_orientation_q == 2'h2 && M_tile18_orientation_q == 2'h3 && M_tile19_orientation_q == 3'h6 && M_tile20_orientation_q == 3'h6 && M_tile21_orientation_q == 2'h3 && (M_tile22_orientation_q == 1'h1 | M_tile22_orientation_q == 3'h4) && (M_tile23_orientation_q == 1'h1 | M_tile23_orientation_q == 3'h4) && M_tile24_orientation_q == 1'h1 && M_tile25_orientation_q == 2'h2)) begin
      led4 = 1'h1;
      led5 = 1'h1;
      is_correct_solution = 1'h1;
    end
    
    case (M_game_stage_q)
      WIN_THE_LEVEL_game_stage: begin
        is_correct_solution = 1'h0;
        selector_out = 1'h0;
        if (rotate_right & M_counter_inc_state) begin
          M_game_stage_d = GAME_PLAYING_game_stage;
        end
      end
      GAME_PLAYING_game_stage: begin
        debug_play = 1'h1;
        if (M_number_of_wins_q == 3'h5) begin
          M_game_stage_d = WIN_THE_GAME_game_stage;
        end
        if (is_correct_solution == 1'h1) begin
          M_number_of_wins_d = M_number_of_wins_q + 1'h1;
          M_game_stage_d = WIN_THE_LEVEL_game_stage;
        end
        
        case (M_number_of_wins_q)
          1'h1: begin
            M_shape5_a_horizontaloffset = 1'h0;
            M_shape5_a_verticaloffset = 1'h0;
            M_shape5_a_orientation = M_tile1_orientation_q - 1'h1;
            M_shape2_a_horizontaloffset = 7'h78;
            M_shape2_a_verticaloffset = 1'h0;
            M_shape2_a_orientation = M_tile2_orientation_q - 1'h1;
            M_shape5_b_horizontaloffset = 8'hf0;
            M_shape5_b_verticaloffset = 1'h0;
            M_shape5_b_orientation = M_tile3_orientation_q - 1'h1;
            M_shape3_a_horizontaloffset = 9'h168;
            M_shape3_a_verticaloffset = 1'h0;
            M_shape3_a_orientation = M_tile4_orientation_q - 1'h1;
            M_shape2_b_horizontaloffset = 9'h1e0;
            M_shape2_b_verticaloffset = 1'h0;
            M_shape2_b_orientation = M_tile5_orientation_q - 1'h1;
            M_shape2_c_horizontaloffset = 6'h3c;
            M_shape2_c_verticaloffset = 6'h34;
            M_shape2_c_orientation = M_tile6_orientation_q - 1'h1;
            M_shape4_a_horizontaloffset = 8'hb4;
            M_shape4_a_verticaloffset = 6'h34;
            M_shape4_a_orientation = M_tile7_orientation_q - 1'h1;
            M_shape0_a_horizontaloffset = 9'h12c;
            M_shape0_a_verticaloffset = 6'h34;
            M_shape0_a_orientation = M_tile8_orientation_q - 1'h1;
            M_shape2_d_horizontaloffset = 9'h1a4;
            M_shape2_d_verticaloffset = 6'h34;
            M_shape2_d_orientation = M_tile9_orientation_q - 1'h1;
            M_shape1_a_horizontaloffset = 10'h21c;
            M_shape1_a_verticaloffset = 6'h34;
            M_shape1_a_orientation = M_tile10_orientation_q - 1'h1;
            M_shape5_c_horizontaloffset = 1'h0;
            M_shape5_c_verticaloffset = 7'h68;
            M_shape5_c_orientation = M_tile11_orientation_q - 1'h1;
            M_shape4_b_horizontaloffset = 7'h78;
            M_shape4_b_verticaloffset = 7'h68;
            M_shape4_b_orientation = M_tile12_orientation_q - 1'h1;
            M_shape1_b_horizontaloffset = 8'hf0;
            M_shape1_b_verticaloffset = 7'h68;
            M_shape1_b_orientation = M_tile13_orientation_q - 1'h1;
            M_shape1_c_horizontaloffset = 9'h168;
            M_shape1_c_verticaloffset = 7'h68;
            M_shape1_c_orientation = M_tile14_orientation_q - 1'h1;
            M_shape0_b_horizontaloffset = 9'h1e0;
            M_shape0_b_verticaloffset = 7'h68;
            M_shape0_b_orientation = M_tile15_orientation_q - 1'h1;
            M_shape4_c_horizontaloffset = 6'h3c;
            M_shape4_c_verticaloffset = 8'h9c;
            M_shape4_c_orientation = M_tile16_orientation_q - 1'h1;
            M_shape4_d_horizontaloffset = 8'hb4;
            M_shape4_d_verticaloffset = 8'h9c;
            M_shape4_d_orientation = M_tile17_orientation_q - 1'h1;
            M_shape3_b_horizontaloffset = 9'h12c;
            M_shape3_b_verticaloffset = 8'h9c;
            M_shape3_b_orientation = M_tile18_orientation_q - 1'h1;
            M_shape2_e_horizontaloffset = 9'h1a4;
            M_shape2_e_verticaloffset = 8'h9c;
            M_shape2_e_orientation = M_tile19_orientation_q - 1'h1;
            M_shape3_c_horizontaloffset = 10'h21c;
            M_shape3_c_verticaloffset = 8'h9c;
            M_shape3_c_orientation = M_tile20_orientation_q - 1'h1;
            M_shape3_d_horizontaloffset = 1'h0;
            M_shape3_d_verticaloffset = 8'hd0;
            M_shape3_d_orientation = M_tile21_orientation_q - 1'h1;
            M_shape4_e_horizontaloffset = 7'h78;
            M_shape4_e_verticaloffset = 8'hd0;
            M_shape4_e_orientation = M_tile22_orientation_q - 1'h1;
            M_shape1_d_horizontaloffset = 8'hf0;
            M_shape1_d_verticaloffset = 8'hd0;
            M_shape1_d_orientation = M_tile23_orientation_q - 1'h1;
            M_shape1_e_horizontaloffset = 9'h168;
            M_shape1_e_verticaloffset = 8'hd0;
            M_shape1_e_orientation = M_tile24_orientation_q - 1'h1;
            M_shape1_f_horizontaloffset = 9'h1e0;
            M_shape1_f_verticaloffset = 8'hd0;
            M_shape1_f_orientation = M_tile25_orientation_q - 1'h1;
            M_shape0_c_horizontaloffset = 1'h0;
            M_shape0_c_verticaloffset = 1'h0;
            M_shape0_c_orientation = 1'h0;
            M_shape0_d_horizontaloffset = 1'h0;
            M_shape0_d_verticaloffset = 1'h0;
            M_shape0_d_orientation = 1'h0;
            M_shape0_e_horizontaloffset = 1'h0;
            M_shape0_e_verticaloffset = 1'h0;
            M_shape0_e_orientation = 1'h0;
            M_shape1_g_horizontaloffset = 1'h0;
            M_shape1_g_verticaloffset = 1'h0;
            M_shape1_g_orientation = 1'h0;
            M_shape3_e_horizontaloffset = 1'h0;
            M_shape3_e_verticaloffset = 1'h0;
            M_shape3_e_orientation = 1'h0;
            M_shape3_f_horizontaloffset = 1'h0;
            M_shape3_f_verticaloffset = 1'h0;
            M_shape3_f_orientation = 1'h0;
            tile1_out = M_shape5_a_bitout;
            tile2_out = M_shape2_a_bitout;
            tile3_out = M_shape5_b_bitout;
            tile4_out = M_shape3_a_bitout;
            tile5_out = M_shape2_b_bitout;
            tile6_out = M_shape2_c_bitout;
            tile7_out = M_shape4_a_bitout;
            tile8_out = M_shape0_a_bitout;
            tile9_out = M_shape2_d_bitout;
            tile10_out = M_shape1_a_bitout;
            tile11_out = M_shape5_c_bitout;
            tile12_out = M_shape4_b_bitout;
            tile13_out = M_shape1_b_bitout;
            tile14_out = M_shape1_c_bitout;
            tile15_out = M_shape0_b_bitout;
            tile16_out = M_shape4_c_bitout;
            tile17_out = M_shape4_d_bitout;
            tile18_out = M_shape3_b_bitout;
            tile19_out = M_shape2_e_bitout;
            tile20_out = M_shape3_c_bitout;
            tile21_out = M_shape3_d_bitout;
            tile22_out = M_shape4_e_bitout;
            tile23_out = M_shape1_d_bitout;
            tile24_out = M_shape1_e_bitout;
            tile25_out = M_shape1_f_bitout;
          end
          default: begin
            M_shape3_a_horizontaloffset = 1'h0;
            M_shape3_a_verticaloffset = 1'h0;
            M_shape3_a_orientation = M_tile1_orientation_q - 1'h1;
            M_shape0_a_horizontaloffset = 7'h78;
            M_shape0_a_verticaloffset = 1'h0;
            M_shape0_a_orientation = M_tile2_orientation_q - 1'h1;
            M_shape3_b_horizontaloffset = 8'hf0;
            M_shape3_b_verticaloffset = 1'h0;
            M_shape3_b_orientation = M_tile3_orientation_q - 1'h1;
            M_shape3_c_horizontaloffset = 9'h168;
            M_shape3_c_verticaloffset = 1'h0;
            M_shape3_c_orientation = M_tile4_orientation_q - 1'h1;
            M_shape1_a_horizontaloffset = 9'h1e0;
            M_shape1_a_verticaloffset = 1'h0;
            M_shape1_a_orientation = M_tile5_orientation_q - 1'h1;
            M_shape1_b_horizontaloffset = 6'h3c;
            M_shape1_b_verticaloffset = 6'h34;
            M_shape1_b_orientation = M_tile6_orientation_q - 1'h1;
            M_shape1_c_horizontaloffset = 8'hb4;
            M_shape1_c_verticaloffset = 6'h34;
            M_shape1_c_orientation = M_tile7_orientation_q - 1'h1;
            M_shape5_a_horizontaloffset = 9'h12c;
            M_shape5_a_verticaloffset = 6'h34;
            M_shape5_a_orientation = M_tile8_orientation_q - 1'h1;
            M_shape4_a_horizontaloffset = 9'h1a4;
            M_shape4_a_verticaloffset = 6'h34;
            M_shape4_a_orientation = M_tile9_orientation_q - 1'h1;
            M_shape1_d_horizontaloffset = 10'h21c;
            M_shape1_d_verticaloffset = 6'h34;
            M_shape1_d_orientation = M_tile10_orientation_q - 1'h1;
            M_shape2_a_horizontaloffset = 1'h0;
            M_shape2_a_verticaloffset = 7'h68;
            M_shape2_a_orientation = M_tile11_orientation_q - 1'h1;
            M_shape1_e_horizontaloffset = 7'h78;
            M_shape1_e_verticaloffset = 7'h68;
            M_shape1_e_orientation = M_tile12_orientation_q - 1'h1;
            M_shape0_b_horizontaloffset = 8'hf0;
            M_shape0_b_verticaloffset = 7'h68;
            M_shape0_b_orientation = M_tile13_orientation_q - 1'h1;
            M_shape0_c_horizontaloffset = 9'h168;
            M_shape0_c_verticaloffset = 7'h68;
            M_shape0_c_orientation = M_tile14_orientation_q - 1'h1;
            M_shape3_d_horizontaloffset = 9'h1e0;
            M_shape3_d_verticaloffset = 7'h68;
            M_shape3_d_orientation = M_tile15_orientation_q - 1'h1;
            M_shape1_f_horizontaloffset = 6'h3c;
            M_shape1_f_verticaloffset = 8'h9c;
            M_shape1_f_orientation = M_tile16_orientation_q - 1'h1;
            M_shape5_b_horizontaloffset = 8'hb4;
            M_shape5_b_verticaloffset = 8'h9c;
            M_shape5_b_orientation = M_tile17_orientation_q - 1'h1;
            M_shape2_b_horizontaloffset = 9'h12c;
            M_shape2_b_verticaloffset = 8'h9c;
            M_shape2_b_orientation = M_tile18_orientation_q - 1'h1;
            M_shape2_c_horizontaloffset = 9'h1a4;
            M_shape2_c_verticaloffset = 8'h9c;
            M_shape2_c_orientation = M_tile19_orientation_q - 1'h1;
            M_shape5_c_horizontaloffset = 10'h21c;
            M_shape5_c_verticaloffset = 8'h9c;
            M_shape5_c_orientation = M_tile20_orientation_q - 1'h1;
            M_shape3_e_horizontaloffset = 1'h0;
            M_shape3_e_verticaloffset = 8'hd0;
            M_shape3_e_orientation = M_tile21_orientation_q - 1'h1;
            M_shape0_d_horizontaloffset = 7'h78;
            M_shape0_d_verticaloffset = 8'hd0;
            M_shape0_d_orientation = M_tile22_orientation_q - 1'h1;
            M_shape0_e_horizontaloffset = 8'hf0;
            M_shape0_e_verticaloffset = 8'hd0;
            M_shape0_e_orientation = M_tile23_orientation_q - 1'h1;
            M_shape1_g_horizontaloffset = 9'h168;
            M_shape1_g_verticaloffset = 8'hd0;
            M_shape1_g_orientation = M_tile24_orientation_q - 1'h1;
            M_shape3_f_horizontaloffset = 9'h1e0;
            M_shape3_f_verticaloffset = 8'hd0;
            M_shape3_f_orientation = M_tile25_orientation_q - 1'h1;
            M_shape2_d_horizontaloffset = 1'h0;
            M_shape2_d_verticaloffset = 1'h0;
            M_shape2_d_orientation = 1'h0;
            M_shape2_e_horizontaloffset = 1'h0;
            M_shape2_e_verticaloffset = 1'h0;
            M_shape2_e_orientation = 1'h0;
            M_shape4_b_horizontaloffset = 1'h0;
            M_shape4_b_verticaloffset = 1'h0;
            M_shape4_b_orientation = 1'h0;
            M_shape4_c_horizontaloffset = 1'h0;
            M_shape4_c_verticaloffset = 1'h0;
            M_shape4_c_orientation = 1'h0;
            M_shape4_d_horizontaloffset = 1'h0;
            M_shape4_d_verticaloffset = 1'h0;
            M_shape4_d_orientation = 1'h0;
            M_shape4_e_horizontaloffset = 1'h0;
            M_shape4_e_verticaloffset = 1'h0;
            M_shape4_e_orientation = 1'h0;
            tile1_out = M_shape3_a_bitout;
            tile2_out = M_shape0_a_bitout;
            tile3_out = M_shape3_b_bitout;
            tile4_out = M_shape3_c_bitout;
            tile5_out = M_shape1_a_bitout;
            tile6_out = M_shape1_b_bitout;
            tile7_out = M_shape1_c_bitout;
            tile8_out = M_shape5_a_bitout;
            tile9_out = M_shape4_a_bitout;
            tile10_out = M_shape1_d_bitout;
            tile11_out = M_shape2_a_bitout;
            tile12_out = M_shape1_e_bitout;
            tile13_out = M_shape0_b_bitout;
            tile14_out = M_shape0_c_bitout;
            tile15_out = M_shape3_d_bitout;
            tile16_out = M_shape1_f_bitout;
            tile17_out = M_shape5_b_bitout;
            tile18_out = M_shape2_b_bitout;
            tile19_out = M_shape2_c_bitout;
            tile20_out = M_shape5_c_bitout;
            tile21_out = M_shape3_e_bitout;
            tile22_out = M_shape0_d_bitout;
            tile23_out = M_shape0_e_bitout;
            tile24_out = M_shape1_g_bitout;
            tile25_out = M_shape3_f_bitout;
          end
        endcase
        
        case (M_selected_tile_q)
          S1_selected_tile: begin
            M_selector_horizontaloffset = 1'h0;
            M_selector_verticaloffset = 1'h0;
            if (rotate_right & M_counter_inc_state) begin
              M_alu_alufn = 6'h00;
              M_alu_b = 8'h01;
              M_alu_a = M_tile1_orientation_q;
              M_tile1_orientation_d = M_alu_outalu[0+2-:3];
            end
            if (rotate_left & M_counter_inc_state) begin
              M_tile1_orientation_d = M_tile1_orientation_q - 1'h1;
            end
            if (left & M_counter_inc_state) begin
              M_selected_tile_d = S25_selected_tile;
              debug1 = 1'h1;
            end
            if (right & M_counter_inc_state) begin
              M_selected_tile_d = S2_selected_tile;
              debug1 = 1'h1;
            end
            if (up & M_counter_inc_state) begin
              M_selected_tile_d = S21_selected_tile;
              debug1 = 1'h1;
            end
            if (down & M_counter_inc_state) begin
              M_selected_tile_d = S6_selected_tile;
              debug1 = 1'h1;
            end
          end
          S2_selected_tile: begin
            M_selector_horizontaloffset = 7'h78;
            M_selector_verticaloffset = 1'h0;
            if (rotate_right & M_counter_inc_state) begin
              M_alu_alufn = 6'h00;
              M_alu_b = 8'h01;
              M_alu_a = M_tile2_orientation_q;
              M_tile2_orientation_d = M_alu_outalu[0+2-:3];
            end
            if (rotate_left & M_counter_inc_state) begin
              M_tile2_orientation_d = M_tile2_orientation_q - 1'h1;
            end
            if (left & M_counter_inc_state) begin
              M_selected_tile_d = S1_selected_tile;
            end
            if (right & M_counter_inc_state) begin
              M_selected_tile_d = S3_selected_tile;
            end
            if (up & M_counter_inc_state) begin
              M_selected_tile_d = S22_selected_tile;
            end
            if (down & M_counter_inc_state) begin
              M_selected_tile_d = S7_selected_tile;
            end
          end
          S3_selected_tile: begin
            M_selector_horizontaloffset = 8'hf0;
            M_selector_verticaloffset = 1'h0;
            if (rotate_right & M_counter_inc_state) begin
              M_alu_alufn = 6'h00;
              M_alu_b = 8'h01;
              M_alu_a = M_tile3_orientation_q;
              M_tile3_orientation_d = M_alu_outalu[0+2-:3];
            end
            if (rotate_left & M_counter_inc_state) begin
              M_tile3_orientation_d = M_tile3_orientation_q;
            end
            if (left & M_counter_inc_state) begin
              M_selected_tile_d = S2_selected_tile;
              debug1 = 1'h1;
            end
            if (right & M_counter_inc_state) begin
              M_selected_tile_d = S4_selected_tile;
              debug1 = 1'h1;
            end
            if (up & M_counter_inc_state) begin
              M_selected_tile_d = S23_selected_tile;
              debug1 = 1'h1;
            end
            if (down & M_counter_inc_state) begin
              M_selected_tile_d = S8_selected_tile;
              debug1 = 1'h1;
            end
          end
          S4_selected_tile: begin
            M_selector_horizontaloffset = 9'h168;
            M_selector_verticaloffset = 1'h0;
            if (rotate_right & M_counter_inc_state) begin
              M_alu_alufn = 6'h00;
              M_alu_b = 8'h01;
              M_alu_a = M_tile4_orientation_q;
              M_tile4_orientation_d = M_alu_outalu[0+2-:3];
            end
            if (rotate_left & M_counter_inc_state) begin
              M_tile4_orientation_d = M_tile4_orientation_q - 1'h1;
            end
            if (left & M_counter_inc_state) begin
              M_selected_tile_d = S3_selected_tile;
              debug1 = 1'h1;
            end
            if (right & M_counter_inc_state) begin
              M_selected_tile_d = S5_selected_tile;
              debug1 = 1'h1;
            end
            if (up & M_counter_inc_state) begin
              M_selected_tile_d = S24_selected_tile;
              debug1 = 1'h1;
            end
            if (down & M_counter_inc_state) begin
              M_selected_tile_d = S9_selected_tile;
              debug1 = 1'h1;
            end
          end
          S5_selected_tile: begin
            M_selector_horizontaloffset = 9'h1e0;
            M_selector_verticaloffset = 1'h0;
            if (rotate_right & M_counter_inc_state) begin
              M_alu_alufn = 6'h00;
              M_alu_b = 8'h01;
              M_alu_a = M_tile5_orientation_q;
              M_tile5_orientation_d = M_alu_outalu[0+2-:3];
            end
            if (rotate_left & M_counter_inc_state) begin
              M_tile5_orientation_d = M_tile5_orientation_q - 1'h1;
            end
            if (left & M_counter_inc_state) begin
              M_selected_tile_d = S4_selected_tile;
              debug1 = 1'h1;
            end
            if (right & M_counter_inc_state) begin
              M_selected_tile_d = S6_selected_tile;
              debug1 = 1'h1;
            end
            if (up & M_counter_inc_state) begin
              M_selected_tile_d = S25_selected_tile;
              debug1 = 1'h1;
            end
            if (down & M_counter_inc_state) begin
              M_selected_tile_d = S10_selected_tile;
              debug1 = 1'h1;
            end
          end
          S6_selected_tile: begin
            M_selector_horizontaloffset = 6'h3c;
            M_selector_verticaloffset = 6'h34;
            if (rotate_right & M_counter_inc_state) begin
              M_alu_alufn = 6'h00;
              M_alu_b = 8'h01;
              M_alu_a = M_tile6_orientation_q;
              M_tile6_orientation_d = M_alu_outalu[0+2-:3];
            end
            if (rotate_left & M_counter_inc_state) begin
              M_tile6_orientation_d = M_tile6_orientation_q - 1'h1;
            end
            if (left & M_counter_inc_state) begin
              M_selected_tile_d = S5_selected_tile;
              debug1 = 1'h1;
            end
            if (right & M_counter_inc_state) begin
              M_selected_tile_d = S7_selected_tile;
              debug1 = 1'h1;
            end
            if (up & M_counter_inc_state) begin
              M_selected_tile_d = S1_selected_tile;
              debug1 = 1'h1;
            end
            if (down & M_counter_inc_state) begin
              M_selected_tile_d = S11_selected_tile;
              debug1 = 1'h1;
            end
          end
          S7_selected_tile: begin
            M_selector_horizontaloffset = 8'hb4;
            M_selector_verticaloffset = 6'h34;
            if (rotate_right & M_counter_inc_state) begin
              M_alu_alufn = 6'h00;
              M_alu_b = 8'h01;
              M_alu_a = M_tile7_orientation_q;
              M_tile7_orientation_d = M_alu_outalu[0+2-:3];
            end
            if (rotate_left & M_counter_inc_state) begin
              M_tile7_orientation_d = M_tile7_orientation_q - 1'h1;
            end
            if (left & M_counter_inc_state) begin
              M_selected_tile_d = S6_selected_tile;
              debug1 = 1'h1;
            end
            if (right & M_counter_inc_state) begin
              M_selected_tile_d = S8_selected_tile;
              debug1 = 1'h1;
            end
            if (up & M_counter_inc_state) begin
              M_selected_tile_d = S2_selected_tile;
              debug1 = 1'h1;
            end
            if (down & M_counter_inc_state) begin
              M_selected_tile_d = S12_selected_tile;
              debug1 = 1'h1;
            end
          end
          S8_selected_tile: begin
            M_selector_horizontaloffset = 9'h12c;
            M_selector_verticaloffset = 6'h34;
            if (rotate_right & M_counter_inc_state) begin
              M_alu_alufn = 6'h00;
              M_alu_b = 8'h01;
              M_alu_a = M_tile8_orientation_q;
              M_tile8_orientation_d = M_alu_outalu[0+2-:3];
            end
            if (rotate_left & M_counter_inc_state) begin
              M_tile8_orientation_d = M_tile8_orientation_q - 1'h1;
            end
            if (left & M_counter_inc_state) begin
              M_selected_tile_d = S7_selected_tile;
              debug1 = 1'h1;
            end
            if (right & M_counter_inc_state) begin
              M_selected_tile_d = S9_selected_tile;
              debug1 = 1'h1;
            end
            if (up & M_counter_inc_state) begin
              M_selected_tile_d = S3_selected_tile;
              debug1 = 1'h1;
            end
            if (down & M_counter_inc_state) begin
              M_selected_tile_d = S13_selected_tile;
              debug1 = 1'h1;
            end
          end
          S9_selected_tile: begin
            M_selector_horizontaloffset = 9'h1a4;
            M_selector_verticaloffset = 6'h34;
            if (rotate_right & M_counter_inc_state) begin
              M_alu_alufn = 6'h00;
              M_alu_b = 8'h01;
              M_alu_a = M_tile9_orientation_q;
              M_tile9_orientation_d = M_alu_outalu[0+2-:3];
            end
            if (rotate_left & M_counter_inc_state) begin
              M_tile9_orientation_d = M_tile9_orientation_q - 1'h1;
            end
            if (left & M_counter_inc_state) begin
              M_selected_tile_d = S8_selected_tile;
              debug1 = 1'h1;
            end
            if (right & M_counter_inc_state) begin
              M_selected_tile_d = S10_selected_tile;
              debug1 = 1'h1;
            end
            if (up & M_counter_inc_state) begin
              M_selected_tile_d = S4_selected_tile;
              debug1 = 1'h1;
            end
            if (down & M_counter_inc_state) begin
              M_selected_tile_d = S14_selected_tile;
              debug1 = 1'h1;
            end
          end
          S10_selected_tile: begin
            M_selector_horizontaloffset = 10'h21c;
            M_selector_verticaloffset = 6'h34;
            if (rotate_right & M_counter_inc_state) begin
              M_alu_alufn = 6'h00;
              M_alu_b = 8'h01;
              M_alu_a = M_tile10_orientation_q;
              M_tile10_orientation_d = M_alu_outalu[0+2-:3];
            end
            if (rotate_left & M_counter_inc_state) begin
              M_tile10_orientation_d = M_tile10_orientation_q - 1'h1;
            end
            if (left & M_counter_inc_state) begin
              M_selected_tile_d = S9_selected_tile;
              debug1 = 1'h1;
            end
            if (right & M_counter_inc_state) begin
              M_selected_tile_d = S11_selected_tile;
              debug1 = 1'h1;
            end
            if (up & M_counter_inc_state) begin
              M_selected_tile_d = S5_selected_tile;
              debug1 = 1'h1;
            end
            if (down & M_counter_inc_state) begin
              M_selected_tile_d = S15_selected_tile;
              debug1 = 1'h1;
            end
          end
          S11_selected_tile: begin
            M_selector_horizontaloffset = 1'h0;
            M_selector_verticaloffset = 7'h68;
            if (rotate_right & M_counter_inc_state) begin
              M_alu_alufn = 6'h00;
              M_alu_b = 8'h01;
              M_alu_a = M_tile11_orientation_q;
              M_tile11_orientation_d = M_alu_outalu[0+2-:3];
            end
            if (rotate_left & M_counter_inc_state) begin
              M_tile11_orientation_d = M_tile11_orientation_q - 1'h1;
            end
            if (left & M_counter_inc_state) begin
              M_selected_tile_d = S10_selected_tile;
              debug1 = 1'h1;
            end
            if (right & M_counter_inc_state) begin
              M_selected_tile_d = S12_selected_tile;
              debug1 = 1'h1;
            end
            if (up & M_counter_inc_state) begin
              M_selected_tile_d = S6_selected_tile;
              debug1 = 1'h1;
            end
            if (down & M_counter_inc_state) begin
              M_selected_tile_d = S16_selected_tile;
              debug1 = 1'h1;
            end
          end
          S12_selected_tile: begin
            M_selector_horizontaloffset = 7'h78;
            M_selector_verticaloffset = 7'h68;
            if (rotate_right & M_counter_inc_state) begin
              M_alu_alufn = 6'h00;
              M_alu_b = 8'h01;
              M_alu_a = M_tile12_orientation_q;
              M_tile12_orientation_d = M_alu_outalu[0+2-:3];
            end
            if (rotate_left & M_counter_inc_state) begin
              M_tile12_orientation_d = M_tile12_orientation_q - 1'h1;
            end
            if (left & M_counter_inc_state) begin
              M_selected_tile_d = S11_selected_tile;
              debug1 = 1'h1;
            end
            if (right & M_counter_inc_state) begin
              M_selected_tile_d = S13_selected_tile;
              debug1 = 1'h1;
            end
            if (up & M_counter_inc_state) begin
              M_selected_tile_d = S7_selected_tile;
              debug1 = 1'h1;
            end
            if (down & M_counter_inc_state) begin
              M_selected_tile_d = S17_selected_tile;
              debug1 = 1'h1;
            end
          end
          S13_selected_tile: begin
            M_selector_horizontaloffset = 8'hf0;
            M_selector_verticaloffset = 7'h68;
            if (rotate_right & M_counter_inc_state) begin
              M_alu_alufn = 6'h00;
              M_alu_b = 8'h01;
              M_alu_a = M_tile13_orientation_q;
              M_tile13_orientation_d = M_alu_outalu[0+2-:3];
            end
            if (rotate_left & M_counter_inc_state) begin
              M_tile13_orientation_d = M_tile13_orientation_q - 1'h1;
            end
            if (left & M_counter_inc_state) begin
              M_selected_tile_d = S12_selected_tile;
              debug1 = 1'h1;
            end
            if (right & M_counter_inc_state) begin
              M_selected_tile_d = S14_selected_tile;
              debug1 = 1'h1;
            end
            if (up & M_counter_inc_state) begin
              M_selected_tile_d = S8_selected_tile;
              debug1 = 1'h1;
            end
            if (down & M_counter_inc_state) begin
              M_selected_tile_d = S18_selected_tile;
              debug1 = 1'h1;
            end
          end
          S14_selected_tile: begin
            M_selector_horizontaloffset = 9'h168;
            M_selector_verticaloffset = 7'h68;
            if (rotate_right & M_counter_inc_state) begin
              M_alu_alufn = 6'h00;
              M_alu_b = 8'h01;
              M_alu_a = M_tile14_orientation_q;
              M_tile14_orientation_d = M_alu_outalu[0+2-:3];
            end
            if (rotate_left & M_counter_inc_state) begin
              M_tile14_orientation_d = M_tile14_orientation_q - 1'h1;
            end
            if (left & M_counter_inc_state) begin
              M_selected_tile_d = S13_selected_tile;
              debug1 = 1'h1;
            end
            if (right & M_counter_inc_state) begin
              M_selected_tile_d = S15_selected_tile;
              debug1 = 1'h1;
            end
            if (up & M_counter_inc_state) begin
              M_selected_tile_d = S9_selected_tile;
              debug1 = 1'h1;
            end
            if (down & M_counter_inc_state) begin
              M_selected_tile_d = S19_selected_tile;
              debug1 = 1'h1;
            end
          end
          S15_selected_tile: begin
            M_selector_horizontaloffset = 9'h1e0;
            M_selector_verticaloffset = 7'h68;
            if (rotate_right & M_counter_inc_state) begin
              M_alu_alufn = 6'h00;
              M_alu_b = 8'h01;
              M_alu_a = M_tile15_orientation_q;
              M_tile15_orientation_d = M_alu_outalu[0+2-:3];
            end
            if (rotate_left & M_counter_inc_state) begin
              M_tile15_orientation_d = M_tile15_orientation_q - 1'h1;
            end
            if (left & M_counter_inc_state) begin
              M_selected_tile_d = S14_selected_tile;
              debug1 = 1'h1;
            end
            if (right & M_counter_inc_state) begin
              M_selected_tile_d = S16_selected_tile;
              debug1 = 1'h1;
            end
            if (up & M_counter_inc_state) begin
              M_selected_tile_d = S10_selected_tile;
              debug1 = 1'h1;
            end
            if (down & M_counter_inc_state) begin
              M_selected_tile_d = S20_selected_tile;
              debug1 = 1'h1;
            end
          end
          S16_selected_tile: begin
            M_selector_horizontaloffset = 6'h3c;
            M_selector_verticaloffset = 8'h9c;
            if (rotate_right & M_counter_inc_state) begin
              M_alu_alufn = 6'h00;
              M_alu_b = 8'h01;
              M_alu_a = M_tile16_orientation_q;
              M_tile16_orientation_d = M_alu_outalu[0+2-:3];
            end
            if (rotate_left & M_counter_inc_state) begin
              M_tile16_orientation_d = M_tile16_orientation_q - 1'h1;
            end
            if (left & M_counter_inc_state) begin
              M_selected_tile_d = S15_selected_tile;
              debug1 = 1'h1;
            end
            if (right & M_counter_inc_state) begin
              M_selected_tile_d = S17_selected_tile;
              debug1 = 1'h1;
            end
            if (up & M_counter_inc_state) begin
              M_selected_tile_d = S11_selected_tile;
              debug1 = 1'h1;
            end
            if (down & M_counter_inc_state) begin
              M_selected_tile_d = S21_selected_tile;
              debug1 = 1'h1;
            end
          end
          S17_selected_tile: begin
            M_selector_horizontaloffset = 8'hb4;
            M_selector_verticaloffset = 8'h9c;
            if (rotate_right & M_counter_inc_state) begin
              M_alu_alufn = 6'h00;
              M_alu_b = 8'h01;
              M_alu_a = M_tile17_orientation_q;
              M_tile17_orientation_d = M_alu_outalu[0+2-:3];
            end
            if (rotate_left & M_counter_inc_state) begin
              M_tile17_orientation_d = M_tile17_orientation_q - 1'h1;
            end
            if (left & M_counter_inc_state) begin
              M_selected_tile_d = S16_selected_tile;
              debug1 = 1'h1;
            end
            if (right & M_counter_inc_state) begin
              M_selected_tile_d = S18_selected_tile;
              debug1 = 1'h1;
            end
            if (up & M_counter_inc_state) begin
              M_selected_tile_d = S12_selected_tile;
              debug1 = 1'h1;
            end
            if (down & M_counter_inc_state) begin
              M_selected_tile_d = S22_selected_tile;
              debug1 = 1'h1;
            end
          end
          S18_selected_tile: begin
            M_selector_horizontaloffset = 9'h12c;
            M_selector_verticaloffset = 8'h9c;
            if (rotate_right & M_counter_inc_state) begin
              M_alu_alufn = 6'h00;
              M_alu_b = 8'h01;
              M_alu_a = M_tile18_orientation_q;
              M_tile18_orientation_d = M_alu_outalu[0+2-:3];
            end
            if (rotate_left & M_counter_inc_state) begin
              M_tile18_orientation_d = M_tile18_orientation_q - 1'h1;
            end
            if (left & M_counter_inc_state) begin
              M_selected_tile_d = S17_selected_tile;
              debug1 = 1'h1;
            end
            if (right & M_counter_inc_state) begin
              M_selected_tile_d = S19_selected_tile;
              debug1 = 1'h1;
            end
            if (up & M_counter_inc_state) begin
              M_selected_tile_d = S13_selected_tile;
              debug1 = 1'h1;
            end
            if (down & M_counter_inc_state) begin
              M_selected_tile_d = S23_selected_tile;
              debug1 = 1'h1;
            end
          end
          S19_selected_tile: begin
            M_selector_horizontaloffset = 9'h1a4;
            M_selector_verticaloffset = 8'h9c;
            if (rotate_right & M_counter_inc_state) begin
              M_alu_alufn = 6'h00;
              M_alu_b = 8'h01;
              M_alu_a = M_tile19_orientation_q;
              M_tile19_orientation_d = M_alu_outalu[0+2-:3];
            end
            if (rotate_left & M_counter_inc_state) begin
              M_tile19_orientation_d = M_tile19_orientation_q - 1'h1;
            end
            if (left & M_counter_inc_state) begin
              M_selected_tile_d = S18_selected_tile;
              debug1 = 1'h1;
            end
            if (right & M_counter_inc_state) begin
              M_selected_tile_d = S20_selected_tile;
              debug1 = 1'h1;
            end
            if (up & M_counter_inc_state) begin
              M_selected_tile_d = S14_selected_tile;
              debug1 = 1'h1;
            end
            if (down & M_counter_inc_state) begin
              M_selected_tile_d = S24_selected_tile;
              debug1 = 1'h1;
            end
          end
          S20_selected_tile: begin
            M_selector_horizontaloffset = 10'h21c;
            M_selector_verticaloffset = 8'h9c;
            if (rotate_right & M_counter_inc_state) begin
              M_alu_alufn = 6'h00;
              M_alu_b = 8'h01;
              M_alu_a = M_tile20_orientation_q;
              M_tile20_orientation_d = M_alu_outalu[0+2-:3];
            end
            if (rotate_left & M_counter_inc_state) begin
              M_tile20_orientation_d = M_tile20_orientation_q - 1'h1;
            end
            if (left & M_counter_inc_state) begin
              M_selected_tile_d = S19_selected_tile;
              debug1 = 1'h1;
            end
            if (right & M_counter_inc_state) begin
              M_selected_tile_d = S21_selected_tile;
              debug1 = 1'h1;
            end
            if (up & M_counter_inc_state) begin
              M_selected_tile_d = S15_selected_tile;
              debug1 = 1'h1;
            end
            if (down & M_counter_inc_state) begin
              M_selected_tile_d = S25_selected_tile;
              debug1 = 1'h1;
            end
          end
          S21_selected_tile: begin
            M_selector_horizontaloffset = 1'h0;
            M_selector_verticaloffset = 8'hd0;
            if (rotate_right & M_counter_inc_state) begin
              M_alu_alufn = 6'h00;
              M_alu_b = 8'h01;
              M_alu_a = M_tile21_orientation_q;
              M_tile21_orientation_d = M_alu_outalu[0+2-:3];
            end
            if (rotate_left & M_counter_inc_state) begin
              M_tile21_orientation_d = M_tile21_orientation_q - 1'h1;
            end
            if (left & M_counter_inc_state) begin
              M_selected_tile_d = S20_selected_tile;
              debug1 = 1'h1;
            end
            if (right & M_counter_inc_state) begin
              M_selected_tile_d = S22_selected_tile;
              debug1 = 1'h1;
            end
            if (up & M_counter_inc_state) begin
              M_selected_tile_d = S16_selected_tile;
              debug1 = 1'h1;
            end
            if (down & M_counter_inc_state) begin
              M_selected_tile_d = S1_selected_tile;
              debug1 = 1'h1;
            end
          end
          S22_selected_tile: begin
            M_selector_horizontaloffset = 7'h78;
            M_selector_verticaloffset = 8'hd0;
            if (rotate_right & M_counter_inc_state) begin
              M_alu_alufn = 6'h00;
              M_alu_b = 8'h01;
              M_alu_a = M_tile22_orientation_q;
              M_tile22_orientation_d = M_alu_outalu[0+2-:3];
            end
            if (rotate_left & M_counter_inc_state) begin
              M_tile22_orientation_d = M_tile22_orientation_q - 1'h1;
            end
            if (left & M_counter_inc_state) begin
              M_selected_tile_d = S21_selected_tile;
              debug1 = 1'h1;
            end
            if (right & M_counter_inc_state) begin
              M_selected_tile_d = S23_selected_tile;
              debug1 = 1'h1;
            end
            if (up & M_counter_inc_state) begin
              M_selected_tile_d = S17_selected_tile;
              debug1 = 1'h1;
            end
            if (down & M_counter_inc_state) begin
              M_selected_tile_d = S2_selected_tile;
              debug1 = 1'h1;
            end
          end
          S23_selected_tile: begin
            M_selector_horizontaloffset = 8'hf0;
            M_selector_verticaloffset = 8'hd0;
            if (rotate_right & M_counter_inc_state) begin
              M_alu_alufn = 6'h00;
              M_alu_b = 8'h01;
              M_alu_a = M_tile23_orientation_q;
              M_tile23_orientation_d = M_alu_outalu[0+2-:3];
            end
            if (rotate_left & M_counter_inc_state) begin
              M_tile23_orientation_d = M_tile23_orientation_q - 1'h1;
            end
            if (left & M_counter_inc_state) begin
              M_selected_tile_d = S22_selected_tile;
              debug1 = 1'h1;
            end
            if (right & M_counter_inc_state) begin
              M_selected_tile_d = S24_selected_tile;
              debug1 = 1'h1;
            end
            if (up & M_counter_inc_state) begin
              M_selected_tile_d = S18_selected_tile;
              debug1 = 1'h1;
            end
            if (down & M_counter_inc_state) begin
              M_selected_tile_d = S3_selected_tile;
              debug1 = 1'h1;
            end
          end
          S24_selected_tile: begin
            M_selector_horizontaloffset = 9'h168;
            M_selector_verticaloffset = 8'hd0;
            if (rotate_right & M_counter_inc_state) begin
              M_alu_alufn = 6'h00;
              M_alu_b = 8'h01;
              M_alu_a = M_tile24_orientation_q;
              M_tile24_orientation_d = M_alu_outalu[0+2-:3];
            end
            if (rotate_left & M_counter_inc_state) begin
              M_tile24_orientation_d = M_tile24_orientation_q - 1'h1;
            end
            if (left & M_counter_inc_state) begin
              M_selected_tile_d = S23_selected_tile;
              debug1 = 1'h1;
            end
            if (right & M_counter_inc_state) begin
              M_selected_tile_d = S25_selected_tile;
              debug1 = 1'h1;
            end
            if (up & M_counter_inc_state) begin
              M_selected_tile_d = S19_selected_tile;
              debug1 = 1'h1;
            end
            if (down & M_counter_inc_state) begin
              M_selected_tile_d = S4_selected_tile;
              debug1 = 1'h1;
            end
          end
          S25_selected_tile: begin
            M_selector_horizontaloffset = 9'h1e0;
            M_selector_verticaloffset = 8'hd0;
            if (rotate_right & M_counter_inc_state) begin
              M_alu_alufn = 6'h00;
              M_alu_b = 8'h01;
              M_alu_a = M_tile25_orientation_q;
              M_tile25_orientation_d = M_alu_outalu[0+2-:3];
            end
            if (rotate_left & M_counter_inc_state) begin
              M_tile25_orientation_d = M_tile25_orientation_q - 1'h1;
            end
            if (left & M_counter_inc_state) begin
              M_selected_tile_d = S24_selected_tile;
              debug1 = 1'h1;
            end
            if (right & M_counter_inc_state) begin
              M_selected_tile_d = S1_selected_tile;
              debug1 = 1'h1;
            end
            if (up & M_counter_inc_state) begin
              M_selected_tile_d = S20_selected_tile;
              debug1 = 1'h1;
            end
            if (down & M_counter_inc_state) begin
              M_selected_tile_d = S5_selected_tile;
              debug1 = 1'h1;
            end
          end
        endcase
      end
    endcase
  end
  
  always @(posedge clk) begin
    M_tile1_orientation_q <= M_tile1_orientation_d;
    M_tile2_orientation_q <= M_tile2_orientation_d;
    M_tile3_orientation_q <= M_tile3_orientation_d;
    M_tile4_orientation_q <= M_tile4_orientation_d;
    M_tile5_orientation_q <= M_tile5_orientation_d;
    M_tile6_orientation_q <= M_tile6_orientation_d;
    M_tile7_orientation_q <= M_tile7_orientation_d;
    M_tile8_orientation_q <= M_tile8_orientation_d;
    M_tile9_orientation_q <= M_tile9_orientation_d;
    M_tile10_orientation_q <= M_tile10_orientation_d;
    M_tile11_orientation_q <= M_tile11_orientation_d;
    M_tile12_orientation_q <= M_tile12_orientation_d;
    M_tile13_orientation_q <= M_tile13_orientation_d;
    M_tile14_orientation_q <= M_tile14_orientation_d;
    M_tile15_orientation_q <= M_tile15_orientation_d;
    M_tile16_orientation_q <= M_tile16_orientation_d;
    M_tile17_orientation_q <= M_tile17_orientation_d;
    M_tile18_orientation_q <= M_tile18_orientation_d;
    M_tile19_orientation_q <= M_tile19_orientation_d;
    M_tile20_orientation_q <= M_tile20_orientation_d;
    M_tile21_orientation_q <= M_tile21_orientation_d;
    M_tile22_orientation_q <= M_tile22_orientation_d;
    M_tile23_orientation_q <= M_tile23_orientation_d;
    M_tile24_orientation_q <= M_tile24_orientation_d;
    M_tile25_orientation_q <= M_tile25_orientation_d;
    M_number_of_wins_q <= M_number_of_wins_d;
    M_selected_tile_q <= M_selected_tile_d;
    M_game_stage_q <= M_game_stage_d;
  end
  
endmodule
